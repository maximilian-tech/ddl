image: python:3.10

stages:
  - lint
  - test

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  POETRY_HOME: "$CI_PROJECT_DIR/.poetry"
  POETRY_CACHE_DIR: "$CI_PROJECT_DIR/.poetry/cache"
  POETRY_VIRTUALENVS_IN_PROJECT: 'true'
  POETRY_VIRTUALENVS_OPTIONS_ALWAYS_COPY: 'true'
  CACHE_COMPRESSION_LEVEL: 'fast'
  FF_USE_FASTZIP: 'true'

cache:
  key: python-$CI_COMMIT_REF_SLUG
  paths:
    - ".cache/"
    - ".poetry/"
    - ".venv/"


before_script:
  - echo "Installing Poetry..."
  - echo 'export PATH="$PATH:/root/.local/bin"' >> ~/.bashrc && source ~/.bashrc
  - echo  "CI_BUILDS_DIR:" "$CI_BUILDS_DIR"
  - echo  "CI_PROJECT_DIR:" "$CI_PROJECT_DIR"
  - pwd
  - pip install --user --upgrade pipx
  - pipx ensurepath
  - pipx install poetry
#  - poetry install -vvv --with dev --no-root
  - poetry install -vvv --with dev
  - pip --version
  - source $(poetry env info --path)/bin/activate
  - python --version; echo "pipx $(pipx --version)"; poetry --version
  - echo "CI_COMMIT_REF_SLUG:" "$CI_COMMIT_REF_SLUG"
  - echo "CI_COMMIT_BRANCH:" "$CI_COMMIT_BRANCH"

pytest:
  stage: test
  script:
    - apt-get update && apt-get install -y libgraphviz-dev && apt-get clean
    - pytest --cov --cov-report term --cov-report xml:coverage.xml tests/
  allow_failure: false
  coverage: "/(?i)total.*? (100(?:\\.0+)?\\%|[1-9]?\\d(?:\\.\\d+)?\\%)$/"
  cache:
    key: python-$CI_COMMIT_REF_SLUG
    paths:
      - ".cache/"
      - ".poetry/"
      - ".venv/"
      - ".pytest_cache/"
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  tags:
    - dissertation_runner
  interruptible: true

mypy:
  stage: test
  script:
    - mypy .
  allow_failure: false
  cache:
    key: python-$CI_COMMIT_REF_SLUG
    paths:
      - ".cache/"
      - ".poetry/"
      - ".venv/"
      - ".mypy_cache/"
  tags:
    - dissertation_runner
  interruptible: true

ruff:
  stage: lint
  script:
    - ruff check .
  allow_failure: false
  cache:
    key: python-$CI_COMMIT_REF_SLUG
    paths:
      - ".cache/"
      - ".poetry/"
      - ".venv/"
  tags:
    - dissertation_runner
  interruptible: true

black:
  stage: lint
  script:
    - black --check --diff .
    - |
      (black --check . 2>&1) > black_check_output.txt
      echo 'Metrics:'
      unchanged_files=$(grep -oE '[0-9]+ file[s]? would be left unchanged.' < black_check_output.txt | grep -oE '[0-9]+' || echo "0")
      echo "Black_Unchanged_Files $unchanged_files" > metrics.txt
      echo "Black_Unchanged_Files $unchanged_files"
      reformatted_files=$(grep -oE '[0-9]+ file[s]? would be reformatted.' < black_check_output.txt | grep -oE '[0-9]+' || echo "0")
      echo "Black_Reformatted_Files $reformatted_files" >> metrics.txt
      echo "Black_Reformatted_Files $reformatted_files"

  allow_failure: false
  tags:
    - dissertation_runner
  cache:
    key: python-$CI_COMMIT_REF_SLUG
    paths:
      - ".cache/"
      - ".poetry/"
      - ".venv/"
  interruptible: true